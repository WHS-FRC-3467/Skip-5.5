
------------------------------    
    PID Tuning:
    https://www.youtube.com/watch?v=UOuRx9Ujsog&index=2&list=PL8BLGj0RyhMzNXX9gHBosWPRbqqn0gJUQ
------------------------------    
    
    
    driveMecanum command -
    set up CANTalons for Speed PID and manage each with a PIDFManage object
    
    Use setMaxOutput() on RobotDrive to set max velocity.
    
    17.1. (Quadrature) Encoder Position
    When measuring the position of a Quadrature Encoder, the position is measured in 4X encoder
    edges. For example, if a US Digital Encoder with a 360 cycles per revolution (CPR) will count
    1440 units per rotation when read using “Encoder Position” or “Sensor Position”.
    
    The velocity units of a Quadrature Encoder is the change in Encoder Position per TvelMea
    (TvelMeas=0.1sec). For example, if a US Digital Encoder (CPR=360) spins at 20 rotations per
    second, this will result in a velocity of 2880 (28800 position units per second).
    
    Grayhill Encoders: 256 counts/rotation  
    Wheel Diam = 6 in, Circum = 6 x 3.14159 = 18.85 in = 1.57 ft
    Max Velocity = 12 ft/sec   Rotations/sec = 12 / 1.57 = 7.64
    Max EncCounts/sec = 7.64 * (256 * 4) = 7823 
    Encoder velocity = counts per 0.1 sec = 7823/10 = 782 ~= 780
    
------------------------------

    PowerMonitor subsystem - wrapper around PowerDistributionModule
    Method to get current reading on given channel
    Debug mode & default command to update SDB
    State: current condition defined by battery voltage (green, yellow, orange, red?)
    "Cooperative Subsystem" registration method
    "Cooperating Subsystem" notification when current condition changes
    
-------------------------------

    IMU subsystem - wrapper around navX IMU board    
    Method to get current reading on given channel
    Command to run calibration
    Debug mode & default command to periodically update SDB

-------------------------------

    Elevator Control:
    set up a CANTalon for Positional PID and manage with a PIDFManage object
    
    On Instantiation: Read top encoder count from Prefs
    
    elevatorDrive - Default command to drive elevator up and down using Gamepad joystick & PercentV control
        Monitor encoder count and limit travel
    
    elevatorCalibrateGround - drive slowly down until bottom limit closes; zero encoder count
    elevatorCalibrateTop - drive slowly up until upper limit closes; record encoder count in Prefs
    elevatorCalibrate - do elevatorCalibrateGround followed by elevatorCalibrateTop

    Positional PID commands - move elevator to given encoder count
    elevatorToBottom, elevatorToTop - move to extremes
    elevatorStowTote, elevatorStowCan - lift until pawls engage bottom object
    elevatorReleaseTote, elevatorReleaseCan - lift up above pawls so they can be disengaged
    elevatorToFloorStack_1, elevatorToPlatformStack_1, elevatorToStepStack_0
    elevatorToFloorStack_2, elevatorToPlatformStack_2, elevatorToStepStack_1
    elevatorToFloorStack_3, elevatorToPlatformStack_3, elevatorToStepStack_2
    elevatorToFloorStack_4, elevatorToPlatformStack_4
    elevatorToFloorStack_5, elevatorToPlatformStack_5
    elevatorBumpUp, ElevatorBumpDown
    
    
    Elevator Testing:
    
    Startup in manual mode.
    Drive elevator at constant speed using Gamecontroller POD (D-Pad).
    Drive at variable speed using stick1 y-axis (negate value).
    Still need to zero & track with encoder.
    
    Zero encoder using simultaneous press of buttons 11 & 12. 
    
    When a certain button is pressed, go into positional PID and run until target is set.
    Select 4 targets and assign to buttons 1 -> 4.
    
               